// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String   // mesmo sendo mock, j√° deixamos preparado
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  donations Donation[]
}

model Campaign {
  id          String    @id @default(uuid())
  title       String
  description String
  goalAmount  Decimal
  currentAmount Decimal @default(0)
  status      CampaignStatus @default(OPEN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  donations   Donation[]
}

model Donation {
  id         String   @id @default(uuid())
  amount     Decimal
  campaignId String
  userId     String
  createdAt  DateTime @default(now())

  campaign   Campaign @relation(fields: [campaignId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum CampaignStatus {
  OPEN
  CLOSED
}
